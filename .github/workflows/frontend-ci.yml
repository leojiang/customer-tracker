name: Frontend CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'

    - name: Install dependencies
      run: |
        cd frontend
        npm ci

    - name: Run ESLint
      run: |
        cd frontend
        npm run lint

    - name: Run TypeScript check
      run: |
        cd frontend
        npm run type-check

    - name: Run tests (when available)
      run: |
        cd frontend
        # npm run test -- --coverage --watchAll=false
        echo "Frontend tests will run here when test suite is added"

    - name: Build application
      run: |
        cd frontend
        npm run build
      env:
        NEXT_PUBLIC_API_URL: http://localhost:8080/api

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/.next/
        retention-days: 30

  build-docker:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'

    - name: Install dependencies
      run: |
        cd frontend
        npm ci

    - name: Build for production
      run: |
        cd frontend
        npm run build
      env:
        NEXT_PUBLIC_API_URL: ${{ secrets.API_URL || 'http://localhost:8080/api' }}

    - name: Export static files (if using static export)
      run: |
        cd frontend
        # npm run export
        echo "Static export step (enable if using Next.js static export)"

    # Optional: Build Docker image
    # - name: Set up Docker Buildx
    #   uses: docker/setup-buildx-action@v3

    # - name: Login to Docker Hub
    #   uses: docker/login-action@v3
    #   with:
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}

    # - name: Build and push Docker image
    #   uses: docker/build-push-action@v5
    #   with:
    #     context: ./frontend
    #     push: true
    #     tags: your-username/customer-tracker-frontend:latest

  # Optional: Deploy step
  # deploy:
  #   needs: build-docker
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   
  #   steps:
  #   - name: Deploy to Vercel/Netlify/AWS
  #     run: echo "Deploy frontend to production environment"

  # Lighthouse CI for performance monitoring
  lighthouse:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: |
        cd frontend
        npm ci

    - name: Build application
      run: |
        cd frontend
        npm run build

    - name: Run Lighthouse CI
      run: |
        cd frontend
        npm install -g @lhci/cli@0.12.x
        lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}